version: "2"
services:



  rabbit:
    image: rabbitmq:3.7.3-management
    ports:
      - 15672:15672
    networks:
      - backend


  db:
    image: postgres:10.3
    restart: always
    volumes:
      - ./backend/postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: cookienet
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - default #required to get access to db from host machine. dev feature. remove in prod
      - backend


  frontend:
    build: ./frontend
    image: start-project-frontend
    volumes:
      - ./frontend:/home/node/app
    ports:
      - 4200:4200
    networks:
      - frontend
      - default #access to default network required for installing node_modules and running browserify. dev feature. remove in prod


  backend:
    build: ./backend
    image: start-project-backend
    volumes:
      - ./backend:/backend
    ports:
      - 8000:8000
    depends_on:
      - db
    networks:
      - default #access to default network required for installing pip packages etc. dev feature. remove in prod
      - backend
    command: gunicorn --bind backend:8000 --reload --access-logfile ../logs/gunicorn_access.log --error-logfile ../logs/gunicorn_error.log backend.wsgi




  celery:
    image: start-project-backend
    volumes:
      - ./backend:/backend
    depends_on:
      - backend
      - rabbit
    networks:
      - default #access to default network required for installing pip packages etc. dev feature. remove in prod
      - backend
    command: celery -A celery_app worker --loglevel=info


  websocket:
    build: ./websocket
    image: start-project-websocket
    volumes:
      - ./websocket:/home/node/app
    ports:
      - 8988:8988
    networks:
      - default #access to default network required for installing node_modules. dev feature. remove in prod
      - backend
    depends_on:
      - rabbit
    restart: always


  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./backend/static:/var/www/static
    depends_on:
#      - backend
      - frontend
    networks:
      - default
      - backend
      - frontend
    restart: always



networks:
  backend:
    internal: true
  frontend:
    internal: true
